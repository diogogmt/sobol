#content.xfluid
  a(name='line')
  #gallery_wrapper.portlet.x8
    .portlet-header
      h4 Image Gallery

    .portlet-content
      div#tagscope
        form#magicboxform(name="magicboxform", action="")
            input#addtagType(name="tagtype", value="tag", type="hidden")
            input#addFilter(name="addFilter", value="Add a Tag Filter",
              type="text")
            button#searchMediaBtn.btn 
              |Search
        div#searchTags.tagList
      br
      br
      ul#mediaList.gallery
      

  .portlet.x4
    .portlet-header
      h4 Upload File
    .portlet-content
      form#createMediaForm.form.label-top
        .field
          label(for='filename') File Name 
          input#fileName(name='filename', size='30', type='text', value='')
        .field
          label(for='description') Description 
          input#description(name='description', size='30', type='text', value='')
        .field.clearfix
          label(for='file') File Upload 
          input#file.file(name="file", style='opacity: 0;', size='35', type='file')

        div.field
          label(for='tags') Tags 
          div#tagsList.field

        div.field
          select#tagsAvailable
            option(value="default") Select a tag

        div.field
          input#tagName(name='tagName', size='20',
            type='text', value='tag 7')
          button#createTag.btn Add Tag

        input#newTags(name='tags', type='hidden', value='')
        input#existingTags(name='existingTags', type='hidden', value='')

        div.field
        .buttonrow
          button#createMedia.btn Upload File

div#mediaOverlay
div#mediaUpdateOverlay

script(id="editMediaOverlayTmpl", type="text/x-jQuery-tmpl")
  div.apple_overlay(id="${_id}-edit-overlay")
    #content.xfluid
      .portlet.x10
        .portlet-header
          h4 Edit Media
        .portlet-content
          form#editMediaForm.form.label-top
            .field
              label(for='filename') File Name 
              input#fileName-edit(name='filename', size='30', type='text', value='${name}')
            .field
              label(for='description') Description 
              input#description-edit(name='description', size='30', type='text', value='${desc}')
            .field.clearfix
            div#uniform-file.uploader.active
              input.#file-edit.file(id="file", name="file", style="opacity: 0; ", size="35", type="file")
              span.filename
                |No file selected
              span.action
                |Choose File
              label(for='file') File Upload 
              input#file.file(name="file", style='opacity: 0;', size='35', type='file')
            .field
              img(src="/media/${thumbnail}")

            div.field
              label(for='tags') Tags 
              div#tagsList.field

            div.field
              select#tagsAvailable
                option(value="default") Select a tag

            div.field
              input#tagName(name='tagName', size='20',
                type='text', value='tag 7')
              button#createTag.btn Add Tag

            input#newTags(name='tags', type='hidden', value='')

            div.field
            .buttonrow
              button#editMedia.btn Update Media

script(id="searchMediaTmpl", type="text/x-jQuery-tmpl")
  div.tag(query="${name}", class="${name}")
    div.removeFilter(query="${name}")
    div.filter
      span.name
        |${name}


script(id="mediaTagsTmpl", type="text/x-jQuery-tmpl")
  div.tag(query="${name}", class="${name}")
    div.removeTag(query="${name}")
    div.filter
      span.name
        |${name}


script(id="availableTagsTmpl", type="text/x-jQuery-tmpl")
  option(value="${value}") ${text}


script(id="mediaOverlayTmpl", type="text/x-jQuery-tmpl")
  div.apple_overlay(id="${_id}-view-overlay")
    #content.xfluid
      .portlet.x10
        .portlet-header
          h4 ${name}
        .portlet-content
          img(alt='', src='/media/${src}')
          p ${desc}


script(id="mediaGalleryTmpl", type="text/x-jQuery-tmpl")
  li(id="${_id}", data-id="${_id}")
    b ${name}
    br
    img(alt='', src='/media/${thumbnail}', width='150', height='150')
    .actions
      button.view.btn.btn-orange.btn-small.various(rel='#${_id}-view-overlay') View
      button.editMedia.btn.btn-orange.btn-small.various(rel='#${_id}-edit-overlay') Edit
      button.btn.btn-grey.btn-small.delete.deleteImage(media="${_id}") Delete


script
  var searchFilters = new Array()
    , existingMediaTags = new Array()
    , newMediaTags = new Array();
 
  function bindImageListeners() {
    console.log("bindImageListeners");
    $("button[rel]").overlay({mask: '#000', effect: 'apple'});
    
    /*tag 7
    *   Update media
    */
    $(".editImg").fancybox({
      'titlePosition'   : 'inside',
      'transitionIn'    : 'none',
      'transitionOut'   : 'none'
    });
    $(".deleteImage").click(function () {
      var mediaID = $(this).attr("media")
        , that = this;
      $.post("/media/delete", { "mediaID": mediaID }, function (data) {
        // $("#"+mediaID).remove();
        searchMedia();
        setExistingTags();
      })
    });
  }
 
  function searchMedia () {
    console.log("search media");
    console.log(searchFilters);
    $.post("/media/search", { filters: searchFilters }, function(data) {
      console.log("post media search");
      console.log(data);
      if (data) {
        // $("#mediaGalleryTmpl").tmpl(data).appendTo("#mediaList");
        $("#mediaOverlayTmpl").tmpl(data).appendTo("#mediaOverlay");
        $("#editMediaOverlayTmpl").tmpl(data).appendTo("#mediaUpdateOverlay");
        
        $('.gallery').quicksand( $("#mediaGalleryTmpl").tmpl(data), {
          adjustHeight: 'dynamic'
          }, function () {
            console.log("quicksand callback");
            bindImageListeners();
        });
      }
      else {
        $('.gallery').empty();
      }
      
    });
  }
 
  function setExistingTags() {
    console.log("setExistingTags");
    $.get("/media/tags", function (data) {
      console.log("get media tags");
      console.log(data);
      var tags = new Array();
      tags.push({"value": 0, "text": "Select a tag"});
      for (var i = 0; i < data.length; i++) {
        tags.push({"value": data[i], "text": data[i]});
      }
      console.log(tags);
      $("#tagsAvailable").empty();
      $("#newTags").val("");
      $("#existingTags").empty("");
      $("#availableTagsTmpl").tmpl(tags).appendTo("#tagsAvailable");
    });
  }
 
 
  $(document).ready(function () {
    searchMedia();
    setExistingTags();
 
 
 
    $("#searchMediaBtn").click(function (e) {
      console.log("search media button click");
      var data = {
        name: $("#addFilter").val()
      };
 
      searchFilters.push(data.name);
      searchMedia();
 
      var item = $("#searchMediaTmpl").tmpl(data).appendTo("#searchTags");
      console.log(item);
      console.log($(item).find(".removeFilter"));
      $(item).find(".removeFilter").click( function (e) {
        console.log("remove filter click");
        console.log($(this).attr("query"));
        $(this).parent().empty();
        searchFilters.splice(searchFilters.indexOf($(this).attr("query")), 1);
        searchMedia();
      });
      
      return false;
    }); // CLOSE searchMediaBtn.click
 
    $("#createTag").click(function (e) {
      console.log("create tag click");
      var tag = {
        name: $("#tagName").val(),
      };
      newMediaTags.push(tag.name);
      $("#tagName").val("")
      $("#mediaTagsTmpl").tmpl(tag).appendTo("#tagsList");
      
      $(".removeTag").click(function (e) {
        console.log("remove tag click");
        $(this).parent().empty();
        newMediaTags.splice(newMediaTags.indexOf($(this).attr("query")), 1);
      });
 
      return false;
    }); // CLOSE createTag.click
 
  $("#tagsAvailable").change(function () {
    console.log("tags available change");
    
    var tag = {
      name: $("#tagsAvailable :selected").text(),
    };
    existingMediaTags.push($("#tagsAvailable").val());
    var item = $("#mediaTagsTmpl").tmpl(tag).appendTo("#tagsList");
 
    $(item).find(".removeTag").click( function (e) {
      console.log("remove existing tag click");
      $(this).parent().empty();
      existingMediaTags.splice(existingMediaTags.indexOf($(this).attr("query")), 1);
      $("#availableTagsTmpl").tmpl({"name": $(this).attr("query")}).appendTo("#tagsAvailable");
    });
 
    $('#tagsAvailable :selected').remove();
  }); // CLOSE tagsAvailable.change
 
  $("#createMedia").click(function (e) {
    console.log("create media button");
    console.log(existingMediaTags);
    console.log(newMediaTags);
    $("#newTags").val(newMediaTags);
  }); // CLOSE createMedia.click
 
  $("#editMedia").click(function (e) {
    console.log("edit media button");
    console.log(existingMediaTags);
    console.log(newMediaTags);
    $("#newTags").val(newMediaTags);
  }); // CLOSE editMedia.click
 
  }); // CLOSE document.ready